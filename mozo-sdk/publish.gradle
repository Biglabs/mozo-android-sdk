// publish to JCenter
// run command in Terminal
// ./gradlew clean :mozo-sdk:bundleReleaseAar && ./gradlew :mozo-sdk:bintrayUpload -Puser=xxx -Pkey=yyy

apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.bintray'

def sdkName = 'mozo-sdk'
def sdkDesc = 'MozoSDK for Android'
def sdkUrl = 'https://github.com/Biglabs/mozo-android-sdk.git'
def groupProjectId = 'io.mozocoin'
def artifactProjectId = 'mozo-sdk'
def versionDecs = "MozoSDK v$mozo_sdk_version_name released: " + new Date()
logger.quiet(versionDecs)

task sourceJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    archiveClassifier = "sources"
}

task javadoc(type: Javadoc) {
    failOnError false
    source = android.sourceSets.main.java.sourceFiles
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    classpath += configurations.compile
}

// build a jar with javadoc
task javadocJar(type: Jar, dependsOn: javadoc) {
    archiveClassifier = 'javadoc'
    from javadoc.destinationDir
}

publishing {
    publications {
        MozoSDK(MavenPublication) {
            groupId groupProjectId
            artifactId artifactProjectId
            artifact("$buildDir/outputs/aar/mozo-sdk-release.aar")
            artifact sourceJar
            artifact javadocJar
            version mozo_sdk_version_name

            pom {
                name = sdkName
                description = sdkDesc
                url = sdkUrl
                licenses {
                    license {
                        name = "The Apache License, Version 2.0"
                        url = "http://www.apache.org/licenses/LICENSE-2.0.txt"
                    }
                }
                developers {
                    developer {
                        id = "mozodeveloper"
                        name = "Mozo Developer"
                        email = "developer@mozocoin.io"
                    }
                }
                scm {
                    developerConnection = "$sdkUrl/issues"
                    url = sdkUrl
                }
                withXml {
                    def dependenciesNode = asNode().appendNode('dependencies')

                    // Iterate over the implementation dependencies (we don't want the test ones), adding a <dependency> node for each
                    configurations.implementation.allDependencies.each {
                        // Ensure dependencies such as fileTree are not included in the pom.
                        if (it.name != 'unspecified') {
                            def dependencyNode = dependenciesNode.appendNode('dependency')
                            dependencyNode.appendNode('groupId', it.group)
                            dependencyNode.appendNode('artifactId', it.name)
                            dependencyNode.appendNode('version', it.version)
                        }
                    }
                }
            }
        }
    }
}

bintray {
    user = project.hasProperty('user') ? project.user : System.getenv('BINTRAY_USER')
    key = project.hasProperty('key') ? project.key : System.getenv('BINTRAY_API_KEY')
    publications = ['MozoSDK']
    dryRun = false //[Default: false] Whether to run this as dry-run, without deploying
    publish = true //[Default: false] Whether version should be auto published after an upload
    override = true //[Default: false] Whether to override version artifacts already published
    pkg {
        userOrg = 'mozocoin'
        repo = 'MozoSDK'
        name = sdkName
        desc = sdkDesc
        publicDownloadNumbers = true
        licenses = ['Apache-2.0']
        labels = ['MozoSDK', 'mozocoin.io', 'MozoX']
        vcsUrl = sdkUrl
        githubRepo = 'Biglabs/mozo-android-sdk' //Optional Github repository
        githubReleaseNotesFile = 'README.md' //Optional Github readme file
        version {
            name = mozo_sdk_version_name
            desc = versionDecs
            released = new Date()
            vcsTag = "${mozo_sdk_version_name}"
        }
    }
}