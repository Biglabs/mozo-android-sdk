apply plugin: 'maven-publish'
apply plugin: 'signing'

ext {
    /**
     * MozoSDK publication information
     * */
    PUBLISH_ARTIFACT_ID = 'mozo-sdk'
    PUBLISH_GROUP_ID = 'io.mozocoin'
    PUBLISH_DESCRIPTION = 'MozoSDK for Android'
    PUBLISH_URL = 'https://github.com/Biglabs/mozo-android-sdk'
}

task androidSourcesJar(type: Jar) {
    archiveClassifier.set('sources')
    if (project.plugins.findPlugin("com.android.library")) {
        // For Android libraries
        from android.sourceSets.main.java.srcDirs
        from android.sourceSets.main.kotlin.srcDirs
    } else {
        // For pure Kotlin libraries, in case you have them
        from sourceSets.main.java.srcDirs
        from sourceSets.main.kotlin.srcDirs
    }
}

task javadoc(type: Javadoc) {
    failOnError false
    source = android.sourceSets.main.java.sourceFiles
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    archiveClassifier.set("javadoc")
    from javadoc.destinationDir
}

artifacts {
    archives androidSourcesJar
}

group = PUBLISH_GROUP_ID
version = MOZO_SDK_VERSION

afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                groupId PUBLISH_GROUP_ID
                artifactId PUBLISH_ARTIFACT_ID
                version MOZO_SDK_VERSION

                // Two artifacts, the `aar` (or `jar`) and the sources
                if (project.plugins.findPlugin("com.android.library")) {
                    from components.release
                } else {
                    artifact("$buildDir/libs/${project.getName()}-${version}.jar")
                }

                artifact androidSourcesJar
                artifact javadocJar

                // Mostly self-explanatory metadata
                pom {
                    name = PUBLISH_ARTIFACT_ID
                    description = PUBLISH_DESCRIPTION
                    url = PUBLISH_URL
                    licenses {
                        license {
                            name = "The Apache License, Version 2.0"
                            url = "http://www.apache.org/licenses/LICENSE-2.0.txt"
                        }
                    }
                    developers {
                        developer {
                            id = "mozo-developers"
                            name = "Mozo Developers"
                            email = "developer@mozocoin.io"
                        }
                        developer {
                            id = "vunguyenquang-biglabs"
                            name = "Vu Nguyen"
                            email = "vu.nguyen.quang@mozox.com"
                        }
                    }

                    scm {
                        connection = 'scm:git:github.com/Biglabs/mozo-android-sdk.git'
                        developerConnection = 'scm:git:ssh://github.com/Biglabs/mozo-android-sdk.git'
                        url = 'https://github.com/Biglabs/mozo-android-sdk/tree/master'
                    }
                }
            }
        }
    }
}

ext["signing.keyId"] = rootProject.ext["signing.keyId"]
ext["signing.password"] = rootProject.ext["signing.password"]
ext["signing.secretKeyRingFile"] = rootProject.ext["signing.secretKeyRingFile"]

signing {
    sign publishing.publications
}

def versionDecs = "MozoSDK v$MOZO_SDK_VERSION released: " + new Date()
logger.quiet(versionDecs)